events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Ottimizzazioni delle prestazioni
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Logging ottimizzato
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main buffer=64k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Compressione avanzata
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        application/rss+xml
        application/x-javascript
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon
        text/x-component;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Gestione specifica per file CSS e JS nella directory assets
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            gzip_static on;
            
            # Forza il Content-Type corretto per CSS
            location ~* \.css$ {
                add_header Content-Type "text/css" always;
            }
            
            # Forza il Content-Type corretto per JS
            location ~* \.js$ {
                add_header Content-Type "application/javascript" always;
            }
        }

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache ottimizzato per tipi di file specifici
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            add_header Content-Type "text/css" always;
            gzip_static on;
            
            # Assicurati che i file CSS vengano serviti correttamente
            try_files $uri =404;
        }

        # Cache per immagini con ottimizzazioni
        location ~* \.(png|jpg|jpeg|gif|webp|avif)$ {
            expires 6M;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # Cache per altri asset statici
        location ~* \.(ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # Precompressione
        location ~* \.(js|css|html|xml|txt)$ {
            gzip_static on;
        }

        # Security: deny access to hidden files
        location ~ /\. {
            deny all;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}